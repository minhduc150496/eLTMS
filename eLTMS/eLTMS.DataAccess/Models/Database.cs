

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "eLTMS.DataAccess\App.config"
//     Connection String Name: "FinalProjectContext"
//     Connection String:      "Data Source=tcp:ducbm.database.windows.net,1433;Initial Catalog=eLTMS;User ID=ducbm;password=**zapped**;"
// ------------------------------------------------------------------------------------------------
// Database Edition       : SQL Azure
// Database Engine Edition: Azure

//Customized By: Hoangpn
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace eLTMS.DataAccess.Models
{
  
    using System.Linq;

    #region POCO classes
     public interface IDbModel 
     {
		string CreatedBy { get; set; } // CreatedBy (length: 50)
		System.DateTime CreatedDate { get; set; } // CreatedDate
		string UpdatedBy { get; set; } // UpdatedBy (length: 50)
		System.DateTime UpdatedDate { get; set; } // UpdatedDate
	 } 



    // TestProfileLabTestMapping
    [Table("TestProfileLabTestMapping", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class TestProfileLabTestMapping
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TestProfileLabTestMappingID", Order = 1, TypeName = "int")]
        [Index(@"PK__TestProf__9023CE1C6A471833", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Test profile lab test mapping ID")]
        public int TestProfileLabTestMappingId { get; set; } // TestProfileLabTestMappingID (Primary key)

        [Column(@"TestProfileID", Order = 2, TypeName = "int")]
        [Display(Name = "Test profile ID")]
        public int? TestProfileId { get; set; } // TestProfileID

        [Column(@"LabTestID", Order = 3, TypeName = "int")]
        [Display(Name = "Lab test ID")]
        public int? LabTestId { get; set; } // LabTestID

        [Column(@"IsDeleted", Order = 4, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent LabTest pointed by [TestProfileLabTestMapping].([LabTestId]) (FK__TestProfi__LabTe__09A971A2)
        /// </summary>
        [ForeignKey("LabTestId")] public virtual LabTest LabTest { get; set; } // FK__TestProfi__LabTe__09A971A2

        /// <summary>
        /// Parent TestProfile pointed by [TestProfileLabTestMapping].([TestProfileId]) (FK__TestProfi__TestP__0A9D95DB)
        /// </summary>
        [ForeignKey("TestProfileId")] public virtual TestProfile TestProfile { get; set; } // FK__TestProfi__TestP__0A9D95DB

        public TestProfileLabTestMapping()
        {
            IsDeleted = false;
        }
    }

    // TestProfile
    [Table("TestProfile", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class TestProfile
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TestProfileID", Order = 1, TypeName = "int")]
        [Index(@"PK__TestProf__2373011C17D44D01", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Test profile ID")]
        public int TestProfileId { get; set; } // TestProfileID (Primary key)

        [Column(@"TestProfileName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Test profile name")]
        public string TestProfileName { get; set; } // TestProfileName (length: 200)

        [Column(@"ParentProfileID", Order = 3, TypeName = "int")]
        [Display(Name = "Parent profile ID")]
        public int? ParentProfileId { get; set; } // ParentProfileID

        [Column(@"IsDeleted", Order = 4, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child TestProfiles where [TestProfile].[ParentProfileID] point to this entity (FK__TestProfi__Paren__08B54D69)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TestProfile> TestProfiles { get; set; } // TestProfile.FK__TestProfi__Paren__08B54D69
        /// <summary>
        /// Child TestProfileLabTestMappings where [TestProfileLabTestMapping].[TestProfileID] point to this entity (FK__TestProfi__TestP__0A9D95DB)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TestProfileLabTestMapping> TestProfileLabTestMappings { get; set; } // TestProfileLabTestMapping.FK__TestProfi__TestP__0A9D95DB

        // Foreign keys

        /// <summary>
        /// Parent TestProfile pointed by [TestProfile].([ParentProfileId]) (FK__TestProfi__Paren__08B54D69)
        /// </summary>
        [ForeignKey("ParentProfileId")] public virtual TestProfile ParentProfile { get; set; } // FK__TestProfi__Paren__08B54D69

        public TestProfile()
        {
            IsDeleted = false;
            TestProfiles = new System.Collections.Generic.List<TestProfile>();
            TestProfileLabTestMappings = new System.Collections.Generic.List<TestProfileLabTestMapping>();
        }
    }

    // Testing
    [Table("Testing", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Testing
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"TestingID", Order = 1, TypeName = "int")]
        [Index(@"PK__Testing__3214EC27F9F11281", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Testing ID")]
        public int TestingId { get; set; } // TestingID (Primary key)

        [Column(@"LabTestID", Order = 2, TypeName = "int")]
        [Display(Name = "Lab test ID")]
        public int? LabTestId { get; set; } // LabTestID

        [Column(@"PatientID", Order = 3, TypeName = "int")]
        [Display(Name = "Patient ID")]
        public int? PatientId { get; set; } // PatientID

        [Column(@"ResultPaperID", Order = 4, TypeName = "int")]
        [Display(Name = "Result paper ID")]
        public int? ResultPaperId { get; set; } // ResultPaperID

        [Column(@"TechnicianID", Order = 5, TypeName = "int")]
        [Display(Name = "Technician ID")]
        public int? TechnicianId { get; set; } // TechnicianID

        [Column(@"BookedDate", Order = 6, TypeName = "date")]
        [Display(Name = "Booked date")]
        public System.DateTime? BookedDate { get; set; } // BookedDate

        [Column(@"BookedTime", Order = 7, TypeName = "time")]
        [Display(Name = "Booked time")]
        public System.TimeSpan? BookedTime { get; set; } // BookedTime

        [Column(@"RespondingMethod", Order = 8, TypeName = "nchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Responding method")]
        public string RespondingMethod { get; set; } // RespondingMethod (length: 50)

        [Column(@"IsDeleted", Order = 9, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ResultIndexes where [ResultIndex].[TestingID] point to this entity (FK_ResultIndex_Testing)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ResultIndex> ResultIndexes { get; set; } // ResultIndex.FK_ResultIndex_Testing

        // Foreign keys

        /// <summary>
        /// Parent LabTest pointed by [Testing].([LabTestId]) (FK_Testing_LabTest)
        /// </summary>
        [ForeignKey("LabTestId")] public virtual LabTest LabTest { get; set; } // FK_Testing_LabTest

        /// <summary>
        /// Parent Patient pointed by [Testing].([PatientId]) (FK_Testing_Patient)
        /// </summary>
        [ForeignKey("PatientId")] public virtual Patient Patient { get; set; } // FK_Testing_Patient

        /// <summary>
        /// Parent ResultPaper pointed by [Testing].([ResultPaperId]) (FK_Testing_ResultPaper)
        /// </summary>
        [ForeignKey("ResultPaperId")] public virtual ResultPaper ResultPaper { get; set; } // FK_Testing_ResultPaper

        public Testing()
        {
            IsDeleted = false;
            ResultIndexes = new System.Collections.Generic.List<ResultIndex>();
        }
    }

    // database_firewall_rules
    [Table("database_firewall_rules", Schema = "sys")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class database_firewall_rules
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"id", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // id (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"name", Order = 2, TypeName = "nvarchar")]
        [Required]
        [MaxLength(128)]
        [StringLength(128)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // name (Primary key) (length: 128)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"start_ip_address", Order = 3, TypeName = "varchar")]
        [Required]
        [MaxLength(45)]
        [StringLength(45)]
        [Key]
        [Display(Name = "Start ip address")]
        public string StartIpAddress { get; set; } // start_ip_address (Primary key) (length: 45)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"end_ip_address", Order = 4, TypeName = "varchar")]
        [Required]
        [MaxLength(45)]
        [StringLength(45)]
        [Key]
        [Display(Name = "End ip address")]
        public string EndIpAddress { get; set; } // end_ip_address (Primary key) (length: 45)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"create_date", Order = 5, TypeName = "datetime")]
        [Required]
        [Key]
        [Display(Name = "Create date")]
        public System.DateTime CreateDate { get; set; } // create_date (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"modify_date", Order = 6, TypeName = "datetime")]
        [Required]
        [Key]
        [Display(Name = "Modify date")]
        public System.DateTime ModifyDate { get; set; } // modify_date (Primary key)
    }

    // SupplyType
    [Table("SupplyType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplyType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SuppliesTypeId", Order = 1, TypeName = "int")]
        [Index(@"PK_SuppliesType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Supplies type ID")]
        public int SuppliesTypeId { get; set; } // SuppliesTypeId (Primary key)

        [Column(@"SuppliesTypeName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Supplies type name")]
        public string SuppliesTypeName { get; set; } // SuppliesTypeName (length: 50)

        [Column(@"IsDeleted", Order = 3, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Supplies where [Supply].[SuppliesTypeId] point to this entity (FK_Supplies_SuppliesType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Supply> Supplies { get; set; } // Supply.FK_Supplies_SuppliesType

        public SupplyType()
        {
            IsDeleted = false;
            Supplies = new System.Collections.Generic.List<Supply>();
        }
    }

    // Supply
    [Table("Supply", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Supply
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SuppliesId", Order = 1, TypeName = "int")]
        [Index(@"PK_Supplies", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Supplies ID")]
        public int SuppliesId { get; set; } // SuppliesId (Primary key)

        [Column(@"SuppliesCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Supplies code")]
        public string SuppliesCode { get; set; } // SuppliesCode (length: 50)

        [Column(@"SuppliesName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Supplies name")]
        public string SuppliesName { get; set; } // SuppliesName (length: 50)

        [Column(@"SuppliesTypeId", Order = 4, TypeName = "int")]
        [Display(Name = "Supplies type ID")]
        public int? SuppliesTypeId { get; set; } // SuppliesTypeId

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Unit", Order = 6, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 20)

        [Column(@"Note", Order = 7, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 8, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ExportProposurePaperDetails where [ExportProposurePaperDetail].[SuppliesId] point to this entity (FK_ExportProposurePaperDetail_Supplies)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ExportProposurePaperDetail> ExportProposurePaperDetails { get; set; } // ExportProposurePaperDetail.FK_ExportProposurePaperDetail_Supplies
        /// <summary>
        /// Child ImportPaperDetails where [ImportPaperDetail].[SuppliesId] point to this entity (FK_ImportPaperDetail_Supplies)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ImportPaperDetail> ImportPaperDetails { get; set; } // ImportPaperDetail.FK_ImportPaperDetail_Supplies

        // Foreign keys

        /// <summary>
        /// Parent SupplyType pointed by [Supply].([SuppliesTypeId]) (FK_Supplies_SuppliesType)
        /// </summary>
        [ForeignKey("SuppliesTypeId")] public virtual SupplyType SupplyType { get; set; } // FK_Supplies_SuppliesType

        public Supply()
        {
            IsDeleted = false;
            ExportProposurePaperDetails = new System.Collections.Generic.List<ExportProposurePaperDetail>();
            ImportPaperDetails = new System.Collections.Generic.List<ImportPaperDetail>();
        }
    }

    // Sample
    [Table("Sample", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Sample
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"SampleID", Order = 1, TypeName = "int")]
        [Index(@"PK_Sample", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sample ID")]
        public int SampleId { get; set; } // SampleID (Primary key)

        [Column(@"SampleName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Sample name")]
        public string SampleName { get; set; } // SampleName (length: 20)

        [Column(@"Description", Order = 3, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"IsDeleted", Order = 4, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child LabTestSampleMappings where [LabTestSampleMapping].[SampleID] point to this entity (FK_LabTestSampleMapping_Sample)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LabTestSampleMapping> LabTestSampleMappings { get; set; } // LabTestSampleMapping.FK_LabTestSampleMapping_Sample

        public Sample()
        {
            IsDeleted = false;
            LabTestSampleMappings = new System.Collections.Generic.List<LabTestSampleMapping>();
        }
    }

    // ResultPaper
    [Table("ResultPaper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ResultPaper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ResultPaperID", Order = 1, TypeName = "int")]
        [Index(@"PK_ResultPaper", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Result paper ID")]
        public int ResultPaperId { get; set; } // ResultPaperID (Primary key)

        [Column(@"DoctorID", Order = 2, TypeName = "int")]
        [Display(Name = "Doctor ID")]
        public int? DoctorId { get; set; } // DoctorID

        [Column(@"DoctorComment", Order = 3, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Doctor comment")]
        public string DoctorComment { get; set; } // DoctorComment (length: 500)

        [Column(@"ResponseDate", Order = 4, TypeName = "date")]
        [Display(Name = "Response date")]
        public System.DateTime? ResponseDate { get; set; } // ResponseDate

        [Column(@"PatientID", Order = 5, TypeName = "int")]
        [Display(Name = "Patient ID")]
        public int? PatientId { get; set; } // PatientID

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child HospitalSuggestings where [HospitalSuggesting].[ResultPaperID] point to this entity (FK_HospitalSuggesting_ResultPaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalSuggesting> HospitalSuggestings { get; set; } // HospitalSuggesting.FK_HospitalSuggesting_ResultPaper
        /// <summary>
        /// Child Testings where [Testing].[ResultPaperID] point to this entity (FK_Testing_ResultPaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Testing> Testings { get; set; } // Testing.FK_Testing_ResultPaper

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [ResultPaper].([DoctorId]) (FK_ResultPaper_Employee)
        /// </summary>
        [ForeignKey("DoctorId")] public virtual Employee Employee { get; set; } // FK_ResultPaper_Employee

        /// <summary>
        /// Parent Patient pointed by [ResultPaper].([PatientId]) (FK_ResultPaper_Patient)
        /// </summary>
        [ForeignKey("PatientId")] public virtual Patient Patient { get; set; } // FK_ResultPaper_Patient

        public ResultPaper()
        {
            IsDeleted = false;
            Testings = new System.Collections.Generic.List<Testing>();
            HospitalSuggestings = new System.Collections.Generic.List<HospitalSuggesting>();
        }
    }

    // ResultIndex
    [Table("ResultIndex", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ResultIndex
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ResultIndexID", Order = 1, TypeName = "int")]
        [Index(@"PK__ResultIn__64F89096D6D2E98C", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Result index ID")]
        public int ResultIndexId { get; set; } // ResultIndexID (Primary key)

        [Column(@"TestingID", Order = 2, TypeName = "int")]
        [Display(Name = "Testing ID")]
        public int? TestingId { get; set; } // TestingID

        [Column(@"IndexName", Order = 3, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Index name")]
        public string IndexName { get; set; } // IndexName (length: 20)

        [Column(@"IndexValue", Order = 4, TypeName = "real")]
        [Display(Name = "Index value")]
        public float? IndexValue { get; set; } // IndexValue

        [Column(@"LowerBound", Order = 5, TypeName = "real")]
        [Display(Name = "Lower bound")]
        public float? LowerBound { get; set; } // LowerBound

        [Column(@"UpperBound", Order = 6, TypeName = "real")]
        [Display(Name = "Upper bound")]
        public float? UpperBound { get; set; } // UpperBound

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Testing pointed by [ResultIndex].([TestingId]) (FK_ResultIndex_Testing)
        /// </summary>
        [ForeignKey("TestingId")] public virtual Testing Testing { get; set; } // FK_ResultIndex_Testing

        public ResultIndex()
        {
            IsDeleted = false;
        }
    }

    // Patient
    [Table("Patient", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Patient
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"PatientID", Order = 1, TypeName = "int")]
        [Index(@"PK__Patient__3214EC2761CA8559", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Patient ID")]
        public int PatientId { get; set; } // PatientID (Primary key)

        [Column(@"PatientCode", Order = 2, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Patient code")]
        public string PatientCode { get; set; } // PatientCode (length: 20)

        [Column(@"AccountID", Order = 3, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountID

        [Column(@"FullName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Full name")]
        public string FullName { get; set; } // FullName (length: 100)

        [Column(@"Gender", Order = 5, TypeName = "nchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Gender")]
        public string Gender { get; set; } // Gender (length: 10)

        [Column(@"DateOfBirth", Order = 6, TypeName = "datetime")]
        [Display(Name = "Date of birth")]
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth

        [Column(@"PhoneNumber", Order = 7, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        [Column(@"HomeAddress", Order = 8, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Home address")]
        public string HomeAddress { get; set; } // HomeAddress (length: 200)

        [Column(@"CompanyAddress", Order = 9, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Company address")]
        public string CompanyAddress { get; set; } // CompanyAddress (length: 200)

        [Column(@"IsDeleted", Order = 10, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Feedbacks where [Feedback].[PatientID] point to this entity (FK__Feedback__Patien__6B24EA82)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Feedback> Feedbacks { get; set; } // Feedback.FK__Feedback__Patien__6B24EA82
        /// <summary>
        /// Child ResultPapers where [ResultPaper].[PatientID] point to this entity (FK_ResultPaper_Patient)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ResultPaper> ResultPapers { get; set; } // ResultPaper.FK_ResultPaper_Patient
        /// <summary>
        /// Child Testings where [Testing].[PatientID] point to this entity (FK_Testing_Patient)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Testing> Testings { get; set; } // Testing.FK_Testing_Patient

        // Foreign keys

        /// <summary>
        /// Parent Account pointed by [Patient].([AccountId]) (FK_Patient_Account)
        /// </summary>
        [ForeignKey("AccountId")] public virtual Account Account { get; set; } // FK_Patient_Account

        public Patient()
        {
            IsDeleted = false;
            Testings = new System.Collections.Generic.List<Testing>();
            ResultPapers = new System.Collections.Generic.List<ResultPaper>();
            Feedbacks = new System.Collections.Generic.List<Feedback>();
        }
    }

    // LabTestSampleMapping
    [Table("LabTestSampleMapping", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestSampleMapping
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LabTestSampleMappingID", Order = 1, TypeName = "int")]
        [Index(@"PK_LabTestSampleMapping", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Lab test sample mapping ID")]
        public int LabTestSampleMappingId { get; set; } // LabTestSampleMappingID (Primary key)

        [Column(@"SampleID", Order = 2, TypeName = "int")]
        [Display(Name = "Sample ID")]
        public int? SampleId { get; set; } // SampleID

        [Column(@"LabTestID", Order = 3, TypeName = "int")]
        [Display(Name = "Lab test ID")]
        public int? LabTestId { get; set; } // LabTestID

        [Column(@"IsDeleted", Order = 4, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent LabTest pointed by [LabTestSampleMapping].([LabTestId]) (FK_LabTestSampleMapping_LabTest)
        /// </summary>
        [ForeignKey("LabTestId")] public virtual LabTest LabTest { get; set; } // FK_LabTestSampleMapping_LabTest

        /// <summary>
        /// Parent Sample pointed by [LabTestSampleMapping].([SampleId]) (FK_LabTestSampleMapping_Sample)
        /// </summary>
        [ForeignKey("SampleId")] public virtual Sample Sample { get; set; } // FK_LabTestSampleMapping_Sample

        public LabTestSampleMapping()
        {
            IsDeleted = false;
        }
    }

    // LabTest
    [Table("LabTest", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTest
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"LabTestID", Order = 1, TypeName = "int")]
        [Index(@"PK_TestType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Lab test ID")]
        public int LabTestId { get; set; } // LabTestID (Primary key)

        [Column(@"LabTestName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Lab test name")]
        public string LabTestName { get; set; } // LabTestName (length: 100)

        [Column(@"Description", Order = 3, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"Price", Order = 4, TypeName = "int")]
        [Display(Name = "Price")]
        public int? Price { get; set; } // Price

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child LabTestSampleMappings where [LabTestSampleMapping].[LabTestID] point to this entity (FK_LabTestSampleMapping_LabTest)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LabTestSampleMapping> LabTestSampleMappings { get; set; } // LabTestSampleMapping.FK_LabTestSampleMapping_LabTest
        /// <summary>
        /// Child Testings where [Testing].[LabTestID] point to this entity (FK_Testing_LabTest)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Testing> Testings { get; set; } // Testing.FK_Testing_LabTest
        /// <summary>
        /// Child TestProfileLabTestMappings where [TestProfileLabTestMapping].[LabTestID] point to this entity (FK__TestProfi__LabTe__09A971A2)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TestProfileLabTestMapping> TestProfileLabTestMappings { get; set; } // TestProfileLabTestMapping.FK__TestProfi__LabTe__09A971A2

        public LabTest()
        {
            IsDeleted = false;
            LabTestSampleMappings = new System.Collections.Generic.List<LabTestSampleMapping>();
            Testings = new System.Collections.Generic.List<Testing>();
            TestProfileLabTestMappings = new System.Collections.Generic.List<TestProfileLabTestMapping>();
        }
    }

    // ImportPaperDetail
    [Table("ImportPaperDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaperDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ImportPaperDetailId", Order = 1, TypeName = "int")]
        [Index(@"PK_InputPaperDetail", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Import paper detail ID")]
        public int ImportPaperDetailId { get; set; } // ImportPaperDetailId (Primary key)

        [Column(@"ImportPaperId", Order = 2, TypeName = "int")]
        [Display(Name = "Import paper ID")]
        public int? ImportPaperId { get; set; } // ImportPaperId

        [Column(@"SuppliesId", Order = 3, TypeName = "int")]
        [Display(Name = "Supplies ID")]
        public int? SuppliesId { get; set; } // SuppliesId

        [Column(@"Unit", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 50)

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Note", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent ImportPaper pointed by [ImportPaperDetail].([ImportPaperId]) (FK_ImportPaperDetail_ImportPaper)
        /// </summary>
        [ForeignKey("ImportPaperId")] public virtual ImportPaper ImportPaper { get; set; } // FK_ImportPaperDetail_ImportPaper

        /// <summary>
        /// Parent Supply pointed by [ImportPaperDetail].([SuppliesId]) (FK_ImportPaperDetail_Supplies)
        /// </summary>
        [ForeignKey("SuppliesId")] public virtual Supply Supply { get; set; } // FK_ImportPaperDetail_Supplies

        public ImportPaperDetail()
        {
            IsDeleted = false;
        }
    }

    // ImportPaper
    [Table("ImportPaper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ImportPaperId", Order = 1, TypeName = "int")]
        [Index(@"PK_ImportPaper", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Import paper ID")]
        public int ImportPaperId { get; set; } // ImportPaperId (Primary key)

        [Column(@"ImportPaperCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Import paper code")]
        public string ImportPaperCode { get; set; } // ImportPaperCode (length: 20)

        [Column(@"CreateDate", Order = 3, TypeName = "date")]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"AccountId", Order = 4, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountId

        [Column(@"Note", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ImportPaperDetails where [ImportPaperDetail].[ImportPaperId] point to this entity (FK_ImportPaperDetail_ImportPaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ImportPaperDetail> ImportPaperDetails { get; set; } // ImportPaperDetail.FK_ImportPaperDetail_ImportPaper

        public ImportPaper()
        {
            IsDeleted = false;
            ImportPaperDetails = new System.Collections.Generic.List<ImportPaperDetail>();
        }
    }

    // HospitalSuggesting
    [Table("HospitalSuggesting", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalSuggesting
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"ID", Order = 1, TypeName = "int")]
        [Index(@"PK__Hospital__3214EC27A8D8B588", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // ID (Primary key)

        [Column(@"ResultPaperID", Order = 2, TypeName = "int")]
        [Display(Name = "Result paper ID")]
        public int? ResultPaperId { get; set; } // ResultPaperID

        [Column(@"HospitalID", Order = 3, TypeName = "int")]
        [Display(Name = "Hospital ID")]
        public int? HospitalId { get; set; } // HospitalID

        [Column(@"FacultyID", Order = 4, TypeName = "int")]
        [Display(Name = "Faculty ID")]
        public int? FacultyId { get; set; } // FacultyID

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Faculty pointed by [HospitalSuggesting].([FacultyId]) (FK__HospitalS__Facul__7B5B524B)
        /// </summary>
        [ForeignKey("FacultyId")] public virtual Faculty Faculty { get; set; } // FK__HospitalS__Facul__7B5B524B

        /// <summary>
        /// Parent Hospital pointed by [HospitalSuggesting].([HospitalId]) (FK__HospitalS__Hospi__7C4F7684)
        /// </summary>
        [ForeignKey("HospitalId")] public virtual Hospital Hospital { get; set; } // FK__HospitalS__Hospi__7C4F7684

        /// <summary>
        /// Parent ResultPaper pointed by [HospitalSuggesting].([ResultPaperId]) (FK_HospitalSuggesting_ResultPaper)
        /// </summary>
        [ForeignKey("ResultPaperId")] public virtual ResultPaper ResultPaper { get; set; } // FK_HospitalSuggesting_ResultPaper

        public HospitalSuggesting()
        {
            IsDeleted = false;
        }
    }

    // HospitalFacultyMapping
    [Table("HospitalFacultyMapping", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalFacultyMapping
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"HospitalFacultyMappingID", Order = 1, TypeName = "int")]
        [Index(@"PK__Hospital__275680DEE15B550C", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Hospital faculty mapping ID")]
        public int HospitalFacultyMappingId { get; set; } // HospitalFacultyMappingID (Primary key)

        [Column(@"HospitalID", Order = 2, TypeName = "int")]
        [Display(Name = "Hospital ID")]
        public int? HospitalId { get; set; } // HospitalID

        [Column(@"FacultyID", Order = 3, TypeName = "int")]
        [Display(Name = "Faculty ID")]
        public int? FacultyId { get; set; } // FacultyID

        [Column(@"IsDeleted", Order = 4, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Faculty pointed by [HospitalFacultyMapping].([FacultyId]) (FK__HospitalF__Facul__797309D9)
        /// </summary>
        [ForeignKey("FacultyId")] public virtual Faculty Faculty { get; set; } // FK__HospitalF__Facul__797309D9

        /// <summary>
        /// Parent Hospital pointed by [HospitalFacultyMapping].([HospitalId]) (FK__HospitalF__Hospi__7A672E12)
        /// </summary>
        [ForeignKey("HospitalId")] public virtual Hospital Hospital { get; set; } // FK__HospitalF__Hospi__7A672E12

        public HospitalFacultyMapping()
        {
            IsDeleted = false;
        }
    }

    // Hospital
    [Table("Hospital", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Hospital
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"HospitalID", Order = 1, TypeName = "int")]
        [Index(@"PK__Hospital__38C2E58FFD14D6B3", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Hospital ID")]
        public int HospitalId { get; set; } // HospitalID (Primary key)

        [Column(@"HospitalName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Hospital name")]
        public string HospitalName { get; set; } // HospitalName (length: 50)

        [Column(@"HospitalAddress", Order = 3, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Hospital address")]
        public string HospitalAddress { get; set; } // HospitalAddress (length: 200)

        [Column(@"Hotline", Order = 4, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Hotline")]
        public string Hotline { get; set; } // Hotline (length: 20)

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child HospitalFacultyMappings where [HospitalFacultyMapping].[HospitalID] point to this entity (FK__HospitalF__Hospi__7A672E12)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalFacultyMapping> HospitalFacultyMappings { get; set; } // HospitalFacultyMapping.FK__HospitalF__Hospi__7A672E12
        /// <summary>
        /// Child HospitalSuggestings where [HospitalSuggesting].[HospitalID] point to this entity (FK__HospitalS__Hospi__7C4F7684)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalSuggesting> HospitalSuggestings { get; set; } // HospitalSuggesting.FK__HospitalS__Hospi__7C4F7684

        public Hospital()
        {
            IsDeleted = false;
            HospitalFacultyMappings = new System.Collections.Generic.List<HospitalFacultyMapping>();
            HospitalSuggestings = new System.Collections.Generic.List<HospitalSuggesting>();
        }
    }

    // Feedback
    [Table("Feedback", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Feedback
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"FeedbackID", Order = 1, TypeName = "int")]
        [Index(@"PK__Feedback__6A4BEDF617FF1F59", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Feedback ID")]
        public int FeedbackId { get; set; } // FeedbackID (Primary key)

        [Column(@"PatientID", Order = 2, TypeName = "int")]
        [Display(Name = "Patient ID")]
        public int? PatientId { get; set; } // PatientID

        [Column(@"EmployeeID", Order = 3, TypeName = "int")]
        [Display(Name = "Employee ID")]
        public int? EmployeeId { get; set; } // EmployeeID

        [Column(@"Content", Order = 4, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Content")]
        public string Content { get; set; } // Content (length: 500)

        [Column(@"ReceivedDateTime", Order = 5, TypeName = "datetime")]
        [Display(Name = "Received date time")]
        public System.DateTime? ReceivedDateTime { get; set; } // ReceivedDateTime

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Feedback].([EmployeeId]) (FK__Feedback__Employ__778AC167)
        /// </summary>
        [ForeignKey("EmployeeId")] public virtual Employee Employee { get; set; } // FK__Feedback__Employ__778AC167

        /// <summary>
        /// Parent Patient pointed by [Feedback].([PatientId]) (FK__Feedback__Patien__6B24EA82)
        /// </summary>
        [ForeignKey("PatientId")] public virtual Patient Patient { get; set; } // FK__Feedback__Patien__6B24EA82

        public Feedback()
        {
            IsDeleted = false;
        }
    }

    // Faculty
    [Table("Faculty", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Faculty
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"FacultyID", Order = 1, TypeName = "int")]
        [Index(@"PK__Faculty__306F636E41B2DAFC", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Faculty ID")]
        public int FacultyId { get; set; } // FacultyID (Primary key)

        [Column(@"FacultyName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Faculty name")]
        public string FacultyName { get; set; } // FacultyName (length: 200)

        [Column(@"IsDeleted", Order = 3, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child HospitalFacultyMappings where [HospitalFacultyMapping].[FacultyID] point to this entity (FK__HospitalF__Facul__797309D9)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalFacultyMapping> HospitalFacultyMappings { get; set; } // HospitalFacultyMapping.FK__HospitalF__Facul__797309D9
        /// <summary>
        /// Child HospitalSuggestings where [HospitalSuggesting].[FacultyID] point to this entity (FK__HospitalS__Facul__7B5B524B)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalSuggesting> HospitalSuggestings { get; set; } // HospitalSuggesting.FK__HospitalS__Facul__7B5B524B

        public Faculty()
        {
            IsDeleted = false;
            HospitalFacultyMappings = new System.Collections.Generic.List<HospitalFacultyMapping>();
            HospitalSuggestings = new System.Collections.Generic.List<HospitalSuggesting>();
        }
    }

    // ExportProposurePaperDetail
    [Table("ExportProposurePaperDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportProposurePaperDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExportProposurePaperDetailId", Order = 1, TypeName = "int")]
        [Index(@"PK_ExportProposurePaperDetail", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Export proposure paper detail ID")]
        public int ExportProposurePaperDetailId { get; set; } // ExportProposurePaperDetailId (Primary key)

        [Column(@"ExportProposurePaperId", Order = 2, TypeName = "int")]
        [Display(Name = "Export proposure paper ID")]
        public int? ExportProposurePaperId { get; set; } // ExportProposurePaperId

        [Column(@"SuppliesId", Order = 3, TypeName = "int")]
        [Display(Name = "Supplies ID")]
        public int? SuppliesId { get; set; } // SuppliesId

        [Column(@"Unit", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 50)

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Note", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent ExportProposurePaper pointed by [ExportProposurePaperDetail].([ExportProposurePaperId]) (FK_ExportProposurePaperDetail_ExportProposurePaper)
        /// </summary>
        [ForeignKey("ExportProposurePaperId")] public virtual ExportProposurePaper ExportProposurePaper { get; set; } // FK_ExportProposurePaperDetail_ExportProposurePaper

        /// <summary>
        /// Parent Supply pointed by [ExportProposurePaperDetail].([SuppliesId]) (FK_ExportProposurePaperDetail_Supplies)
        /// </summary>
        [ForeignKey("SuppliesId")] public virtual Supply Supply { get; set; } // FK_ExportProposurePaperDetail_Supplies

        public ExportProposurePaperDetail()
        {
            IsDeleted = false;
        }
    }

    // ExportProposurePaper
    [Table("ExportProposurePaper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportProposurePaper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExportProposurePaperId", Order = 1, TypeName = "int")]
        [Index(@"PK_ExportProposurePaper", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Export proposure paper ID")]
        public int ExportProposurePaperId { get; set; } // ExportProposurePaperId (Primary key)

        [Column(@"ExportProposurePaperCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Export proposure paper code")]
        public string ExportProposurePaperCode { get; set; } // ExportProposurePaperCode (length: 20)

        [Column(@"CreateDate", Order = 3, TypeName = "date")]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"AccountId", Order = 4, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountId

        [Column(@"Note", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"Status", Order = 6, TypeName = "nchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 10)

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ExportPapers where [ExportPaper].[ExportProposurePaperId] point to this entity (FK_ExportPaper_ExportProposurePaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ExportPaper> ExportPapers { get; set; } // ExportPaper.FK_ExportPaper_ExportProposurePaper
        /// <summary>
        /// Child ExportProposurePaperDetails where [ExportProposurePaperDetail].[ExportProposurePaperId] point to this entity (FK_ExportProposurePaperDetail_ExportProposurePaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ExportProposurePaperDetail> ExportProposurePaperDetails { get; set; } // ExportProposurePaperDetail.FK_ExportProposurePaperDetail_ExportProposurePaper

        public ExportProposurePaper()
        {
            IsDeleted = false;
            ExportPapers = new System.Collections.Generic.List<ExportPaper>();
            ExportProposurePaperDetails = new System.Collections.Generic.List<ExportProposurePaperDetail>();
        }
    }

    // ExportPaper
    [Table("ExportPaper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportPaper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExportPaperId", Order = 1, TypeName = "int")]
        [Index(@"PK_ExportPaper", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Export paper ID")]
        public int ExportPaperId { get; set; } // ExportPaperId (Primary key)

        [Column(@"ExportPaperCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Export paper code")]
        public string ExportPaperCode { get; set; } // ExportPaperCode (length: 20)

        [Column(@"CreateDate", Order = 3, TypeName = "date")]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"AccountId", Order = 4, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountId

        [Column(@"ExportProposurePaperId", Order = 5, TypeName = "int")]
        [Display(Name = "Export proposure paper ID")]
        public int? ExportProposurePaperId { get; set; } // ExportProposurePaperId

        [Column(@"Note", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent ExportProposurePaper pointed by [ExportPaper].([ExportProposurePaperId]) (FK_ExportPaper_ExportProposurePaper)
        /// </summary>
        [ForeignKey("ExportProposurePaperId")] public virtual ExportProposurePaper ExportProposurePaper { get; set; } // FK_ExportPaper_ExportProposurePaper

        public ExportPaper()
        {
            IsDeleted = false;
        }
    }

    // Employee
    [Table("Employee", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Employee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"EmployeeID", Order = 1, TypeName = "int")]
        [Index(@"PK__Employee__7AD04FF114780BE0", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public int EmployeeId { get; set; } // EmployeeID (Primary key)

        [Column(@"AccountID", Order = 2, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountID

        [Column(@"Status", Order = 3, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 20)

        [Column(@"FullName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Full name")]
        public string FullName { get; set; } // FullName (length: 100)

        [Column(@"Gender", Order = 5, TypeName = "nchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Gender")]
        public string Gender { get; set; } // Gender (length: 10)

        [Column(@"DateOfBirth", Order = 6, TypeName = "date")]
        [Display(Name = "Date of birth")]
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth

        [Column(@"HomeAddress", Order = 7, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Home address")]
        public string HomeAddress { get; set; } // HomeAddress (length: 200)

        [Column(@"StartDate", Order = 8, TypeName = "date")]
        [Display(Name = "Start date")]
        public System.DateTime? StartDate { get; set; } // StartDate

        [Column(@"PhoneNumber", Order = 9, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        [Column(@"IsDeleted", Order = 10, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Feedbacks where [Feedback].[EmployeeID] point to this entity (FK__Feedback__Employ__778AC167)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Feedback> Feedbacks { get; set; } // Feedback.FK__Feedback__Employ__778AC167
        /// <summary>
        /// Child ResultPapers where [ResultPaper].[DoctorID] point to this entity (FK_ResultPaper_Employee)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ResultPaper> ResultPapers { get; set; } // ResultPaper.FK_ResultPaper_Employee

        // Foreign keys

        /// <summary>
        /// Parent Account pointed by [Employee].([AccountId]) (FK__Employee__Accoun__68487DD7)
        /// </summary>
        [ForeignKey("AccountId")] public virtual Account Account { get; set; } // FK__Employee__Accoun__68487DD7

        public Employee()
        {
            IsDeleted = false;
            ResultPapers = new System.Collections.Generic.List<ResultPaper>();
            Feedbacks = new System.Collections.Generic.List<Feedback>();
        }
    }

    // Account
    [Table("Account", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Account
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"AccountID", Order = 1, TypeName = "int")]
        [Index(@"PK__Account__3214EC27626EEC4A", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Account ID")]
        public int AccountId { get; set; } // AccountID (Primary key)

        [Column(@"Role", Order = 2, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Role")]
        public string Role { get; set; } // Role (length: 20)

        [Column(@"Email", Order = 3, TypeName = "nchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 255)

        [Column(@"Password", Order = 4, TypeName = "nchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } // Password (length: 128)

        [Column(@"PhoneNumber", Order = 5, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        [Column(@"AvatarURL", Order = 6, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Avatar url")]
        public string AvatarUrl { get; set; } // AvatarURL (length: 500)

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Employees where [Employee].[AccountID] point to this entity (FK__Employee__Accoun__68487DD7)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Employee> Employees { get; set; } // Employee.FK__Employee__Accoun__68487DD7
        /// <summary>
        /// Child Patients where [Patient].[AccountID] point to this entity (FK_Patient_Account)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Patient> Patients { get; set; } // Patient.FK_Patient_Account

        public Account()
        {
            IsDeleted = false;
            Patients = new System.Collections.Generic.List<Patient>();
            Employees = new System.Collections.Generic.List<Employee>();
        }
    }

    #endregion

    #region POCO Configuration

    // Account
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AccountConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Account>
    {
        public AccountConfiguration()
            : this("dbo")
        {
        }

        public AccountConfiguration(string schema)
        {
            Property(x => x.Role).IsOptional().IsFixedLength();
            Property(x => x.Email).IsOptional().IsFixedLength();
            Property(x => x.Password).IsOptional().IsFixedLength();
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength();
            Property(x => x.AvatarUrl).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // Employee
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class EmployeeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Employee>
    {
        public EmployeeConfiguration()
            : this("dbo")
        {
        }

        public EmployeeConfiguration(string schema)
        {
            Property(x => x.AccountId).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength();
            Property(x => x.FullName).IsOptional();
            Property(x => x.Gender).IsOptional().IsFixedLength();
            Property(x => x.DateOfBirth).IsOptional();
            Property(x => x.HomeAddress).IsOptional();
            Property(x => x.StartDate).IsOptional();
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ExportPaper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportPaperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExportPaper>
    {
        public ExportPaperConfiguration()
            : this("dbo")
        {
        }

        public ExportPaperConfiguration(string schema)
        {
            Property(x => x.ExportPaperCode).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.ExportProposurePaperId).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ExportProposurePaper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportProposurePaperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExportProposurePaper>
    {
        public ExportProposurePaperConfiguration()
            : this("dbo")
        {
        }

        public ExportProposurePaperConfiguration(string schema)
        {
            Property(x => x.ExportProposurePaperCode).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.Status).IsOptional().IsFixedLength();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // ExportProposurePaperDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportProposurePaperDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExportProposurePaperDetail>
    {
        public ExportProposurePaperDetailConfiguration()
            : this("dbo")
        {
        }

        public ExportProposurePaperDetailConfiguration(string schema)
        {
            Property(x => x.ExportProposurePaperId).IsOptional();
            Property(x => x.SuppliesId).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.Quantity).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Faculty
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class FacultyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Faculty>
    {
        public FacultyConfiguration()
            : this("dbo")
        {
        }

        public FacultyConfiguration(string schema)
        {
            Property(x => x.FacultyName).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // Feedback
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class FeedbackConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Feedback>
    {
        public FeedbackConfiguration()
            : this("dbo")
        {
        }

        public FeedbackConfiguration(string schema)
        {
            Property(x => x.PatientId).IsOptional();
            Property(x => x.EmployeeId).IsOptional();
            Property(x => x.Content).IsOptional();
            Property(x => x.ReceivedDateTime).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Hospital
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Hospital>
    {
        public HospitalConfiguration()
            : this("dbo")
        {
        }

        public HospitalConfiguration(string schema)
        {
            Property(x => x.HospitalName).IsOptional();
            Property(x => x.HospitalAddress).IsOptional();
            Property(x => x.Hotline).IsOptional().IsFixedLength();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // HospitalFacultyMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalFacultyMappingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HospitalFacultyMapping>
    {
        public HospitalFacultyMappingConfiguration()
            : this("dbo")
        {
        }

        public HospitalFacultyMappingConfiguration(string schema)
        {
            Property(x => x.HospitalId).IsOptional();
            Property(x => x.FacultyId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // HospitalSuggesting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalSuggestingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HospitalSuggesting>
    {
        public HospitalSuggestingConfiguration()
            : this("dbo")
        {
        }

        public HospitalSuggestingConfiguration(string schema)
        {
            Property(x => x.ResultPaperId).IsOptional();
            Property(x => x.HospitalId).IsOptional();
            Property(x => x.FacultyId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ImportPaper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImportPaper>
    {
        public ImportPaperConfiguration()
            : this("dbo")
        {
        }

        public ImportPaperConfiguration(string schema)
        {
            Property(x => x.ImportPaperCode).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // ImportPaperDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaperDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImportPaperDetail>
    {
        public ImportPaperDetailConfiguration()
            : this("dbo")
        {
        }

        public ImportPaperDetailConfiguration(string schema)
        {
            Property(x => x.ImportPaperId).IsOptional();
            Property(x => x.SuppliesId).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.Quantity).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // LabTest
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LabTest>
    {
        public LabTestConfiguration()
            : this("dbo")
        {
        }

        public LabTestConfiguration(string schema)
        {
            Property(x => x.LabTestName).IsOptional();
            Property(x => x.Description).IsOptional();
            Property(x => x.Price).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // LabTestSampleMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestSampleMappingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LabTestSampleMapping>
    {
        public LabTestSampleMappingConfiguration()
            : this("dbo")
        {
        }

        public LabTestSampleMappingConfiguration(string schema)
        {
            Property(x => x.SampleId).IsOptional();
            Property(x => x.LabTestId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Patient
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PatientConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Patient>
    {
        public PatientConfiguration()
            : this("dbo")
        {
        }

        public PatientConfiguration(string schema)
        {
            Property(x => x.PatientCode).IsOptional().IsFixedLength();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.FullName).IsOptional();
            Property(x => x.Gender).IsOptional().IsFixedLength();
            Property(x => x.DateOfBirth).IsOptional();
            Property(x => x.PhoneNumber).IsOptional().IsFixedLength();
            Property(x => x.HomeAddress).IsOptional();
            Property(x => x.CompanyAddress).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ResultIndex
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ResultIndexConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ResultIndex>
    {
        public ResultIndexConfiguration()
            : this("dbo")
        {
        }

        public ResultIndexConfiguration(string schema)
        {
            Property(x => x.TestingId).IsOptional();
            Property(x => x.IndexName).IsOptional().IsFixedLength();
            Property(x => x.IndexValue).IsOptional();
            Property(x => x.LowerBound).IsOptional();
            Property(x => x.UpperBound).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ResultPaper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ResultPaperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ResultPaper>
    {
        public ResultPaperConfiguration()
            : this("dbo")
        {
        }

        public ResultPaperConfiguration(string schema)
        {
            Property(x => x.DoctorId).IsOptional();
            Property(x => x.DoctorComment).IsOptional();
            Property(x => x.ResponseDate).IsOptional();
            Property(x => x.PatientId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Sample
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SampleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sample>
    {
        public SampleConfiguration()
            : this("dbo")
        {
        }

        public SampleConfiguration(string schema)
        {
            Property(x => x.SampleName).IsOptional();
            Property(x => x.Description).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // Supply
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Supply>
    {
        public SupplyConfiguration()
            : this("dbo")
        {
        }

        public SupplyConfiguration(string schema)
        {
            Property(x => x.SuppliesCode).IsOptional();
            Property(x => x.SuppliesName).IsOptional();
            Property(x => x.SuppliesTypeId).IsOptional();
            Property(x => x.Quantity).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // SupplyType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplyTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SupplyType>
    {
        public SupplyTypeConfiguration()
            : this("dbo")
        {
        }

        public SupplyTypeConfiguration(string schema)
        {
            Property(x => x.SuppliesTypeName).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // database_firewall_rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class sys_DatabaseFirewallRuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<database_firewall_rules>
    {
        public sys_DatabaseFirewallRuleConfiguration()
            : this("sys")
        {
        }

        public sys_DatabaseFirewallRuleConfiguration(string schema)
        {
            Property(x => x.StartIpAddress).IsUnicode(false);
            Property(x => x.EndIpAddress).IsUnicode(false);
        }
    }

    // Testing
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class TestingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Testing>
    {
        public TestingConfiguration()
            : this("dbo")
        {
        }

        public TestingConfiguration(string schema)
        {
            Property(x => x.LabTestId).IsOptional();
            Property(x => x.PatientId).IsOptional();
            Property(x => x.ResultPaperId).IsOptional();
            Property(x => x.TechnicianId).IsOptional();
            Property(x => x.BookedDate).IsOptional();
            Property(x => x.BookedTime).IsOptional();
            Property(x => x.RespondingMethod).IsOptional().IsFixedLength();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // TestProfile
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class TestProfileConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TestProfile>
    {
        public TestProfileConfiguration()
            : this("dbo")
        {
        }

        public TestProfileConfiguration(string schema)
        {
            Property(x => x.TestProfileName).IsOptional();
            Property(x => x.ParentProfileId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // TestProfileLabTestMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class TestProfileLabTestMappingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TestProfileLabTestMapping>
    {
        public TestProfileLabTestMappingConfiguration()
            : this("dbo")
        {
        }

        public TestProfileLabTestMappingConfiguration(string schema)
        {
            Property(x => x.TestProfileId).IsOptional();
            Property(x => x.LabTestId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    #endregion

    #region Stored procedure return models

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SpHelpdiagramdefinitionReturnModel
    {
        public System.Int32? version { get; set; }
        public System.Byte[] definition { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SpHelpdiagramsReturnModel
    {
        public System.String Database { get; set; }
        public System.String Name { get; set; }
        public System.Int32 ID { get; set; }
        public System.String Owner { get; set; }
        public System.Int32 OwnerID { get; set; }
    }

    #endregion

}
// </auto-generated>

