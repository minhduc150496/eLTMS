

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "eLTMS.DataAccess\App.config"
//     Connection String Name: "FinalProjectContext"
//     Connection String:      "Data Source=tcp:ducbm.database.windows.net,1433;Initial Catalog=eLTMS-v3;User ID=ducbm;password=**zapped**;"
// ------------------------------------------------------------------------------------------------
// Database Edition       : SQL Azure
// Database Engine Edition: Azure

//Customized By: Hoangpn
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace eLTMS.DataAccess.Models
{
  
    using System.Linq;

    #region POCO classes
     public interface IDbModel 
     {
		string CreatedBy { get; set; } // CreatedBy (length: 50)
		System.DateTime CreatedDate { get; set; } // CreatedDate
		string UpdatedBy { get; set; } // UpdatedBy (length: 50)
		System.DateTime UpdatedDate { get; set; } // UpdatedDate
	 } 



    // database_firewall_rules
    [Table("database_firewall_rules", Schema = "sys")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class database_firewall_rules
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"id", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // id (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"name", Order = 2, TypeName = "nvarchar")]
        [Required]
        [MaxLength(128)]
        [StringLength(128)]
        [Key]
        [Display(Name = "Name")]
        public string Name { get; set; } // name (Primary key) (length: 128)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"start_ip_address", Order = 3, TypeName = "varchar")]
        [Required]
        [MaxLength(45)]
        [StringLength(45)]
        [Key]
        [Display(Name = "Start ip address")]
        public string StartIpAddress { get; set; } // start_ip_address (Primary key) (length: 45)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"end_ip_address", Order = 4, TypeName = "varchar")]
        [Required]
        [MaxLength(45)]
        [StringLength(45)]
        [Key]
        [Display(Name = "End ip address")]
        public string EndIpAddress { get; set; } // end_ip_address (Primary key) (length: 45)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"create_date", Order = 5, TypeName = "datetime")]
        [Required]
        [Key]
        [Display(Name = "Create date")]
        public System.DateTime CreateDate { get; set; } // create_date (Primary key)

        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"modify_date", Order = 6, TypeName = "datetime")]
        [Required]
        [Key]
        [Display(Name = "Modify date")]
        public System.DateTime ModifyDate { get; set; } // modify_date (Primary key)
    }

    // SupplyType
    [Table("SupplyType", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplyType
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SuppliesTypeId", Order = 1, TypeName = "int")]
        [Index(@"PK_SuppliesType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Supplies type ID")]
        public int SuppliesTypeId { get; set; } // SuppliesTypeId (Primary key)

        [Column(@"SuppliesTypeName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Supplies type name")]
        public string SuppliesTypeName { get; set; } // SuppliesTypeName (length: 50)

        [Column(@"IsDeleted", Order = 3, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Supplies where [Supply].[SuppliesTypeId] point to this entity (FK_Supplies_SuppliesType)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Supply> Supplies { get; set; } // Supply.FK_Supplies_SuppliesType

        public SupplyType()
        {
            IsDeleted = false;
            Supplies = new System.Collections.Generic.List<Supply>();
        }
    }

    // Supply
    [Table("Supply", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Supply
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SuppliesId", Order = 1, TypeName = "int")]
        [Index(@"PK_Supplies", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Supplies ID")]
        public int SuppliesId { get; set; } // SuppliesId (Primary key)

        [Column(@"SuppliesCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Supplies code")]
        public string SuppliesCode { get; set; } // SuppliesCode (length: 50)

        [Column(@"SuppliesName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Supplies name")]
        public string SuppliesName { get; set; } // SuppliesName (length: 50)

        [Column(@"SuppliesTypeId", Order = 4, TypeName = "int")]
        [Display(Name = "Supplies type ID")]
        public int? SuppliesTypeId { get; set; } // SuppliesTypeId

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Unit", Order = 6, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 20)

        [Column(@"Note", Order = 7, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 8, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ExportPaperDetails where [ExportPaperDetail].[SuppliesId] point to this entity (FK_ExportProposurePaperDetail_Supplies)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ExportPaperDetail> ExportPaperDetails { get; set; } // ExportPaperDetail.FK_ExportProposurePaperDetail_Supplies
        /// <summary>
        /// Child ImportPaperDetails where [ImportPaperDetail].[SuppliesId] point to this entity (FK_ImportPaperDetail_Supplies)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ImportPaperDetail> ImportPaperDetails { get; set; } // ImportPaperDetail.FK_ImportPaperDetail_Supplies

        // Foreign keys

        /// <summary>
        /// Parent SupplyType pointed by [Supply].([SuppliesTypeId]) (FK_Supplies_SuppliesType)
        /// </summary>
        [ForeignKey("SuppliesTypeId")] public virtual SupplyType SupplyType { get; set; } // FK_Supplies_SuppliesType

        public Supply()
        {
            IsDeleted = false;
            ImportPaperDetails = new System.Collections.Generic.List<ImportPaperDetail>();
            ExportPaperDetails = new System.Collections.Generic.List<ExportPaperDetail>();
        }
    }

    // SampleGroup
    [Table("SampleGroup", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SampleGroup
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SampleGroupID", Order = 1, TypeName = "int")]
        [Index(@"PK_SampleGroup", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sample group ID")]
        public int SampleGroupId { get; set; } // SampleGroupID (Primary key)

        [Column(@"GroupName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Group name")]
        public string GroupName { get; set; } // GroupName (length: 100)

        [Column(@"GettingDuration", Order = 3, TypeName = "int")]
        [Display(Name = "Getting duration")]
        public int? GettingDuration { get; set; } // GettingDuration

        [Column(@"OpenTime", Order = 4, TypeName = "int")]
        [Display(Name = "Open time")]
        public int? OpenTime { get; set; } // OpenTime

        [Column(@"CloseTime", Order = 5, TypeName = "int")]
        [Display(Name = "Close time")]
        public int? CloseTime { get; set; } // CloseTime

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Samples where [Sample].[SampleGroupID] point to this entity (FK_Sample_SampleGroup)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Sample> Samples { get; set; } // Sample.FK_Sample_SampleGroup

        public SampleGroup()
        {
            Samples = new System.Collections.Generic.List<Sample>();
        }
    }

    // SampleGetting
    [Table("SampleGetting", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SampleGetting
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SampleGettingID", Order = 1, TypeName = "int")]
        [Index(@"PK_SampleGetting", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sample getting ID")]
        public int SampleGettingId { get; set; } // SampleGettingID (Primary key)

        [Column(@"AppointmentCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Appointment code")]
        public string AppointmentCode { get; set; } // AppointmentCode (length: 20)

        [Column(@"SampleID", Order = 3, TypeName = "int")]
        [Display(Name = "Sample ID")]
        public int? SampleId { get; set; } // SampleID

        [Column(@"StartTime", Order = 4, TypeName = "time")]
        [Display(Name = "Start time")]
        public System.TimeSpan? StartTime { get; set; } // StartTime

        [Column(@"FinishTime", Order = 5, TypeName = "time")]
        [Display(Name = "Finish time")]
        public System.TimeSpan? FinishTime { get; set; } // FinishTime

        [Column(@"Status", Order = 6, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 20)

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        [Column(@"GettingDate", Order = 8, TypeName = "date")]
        [Display(Name = "Getting date")]
        public System.DateTime? GettingDate { get; set; } // GettingDate

        // Foreign keys

        /// <summary>
        /// Parent Appointment pointed by [SampleGetting].([AppointmentCode]) (FK_SampleGetting_Appointment)
        /// </summary>
        [ForeignKey("AppointmentCode")] public virtual Appointment Appointment { get; set; } // FK_SampleGetting_Appointment

        /// <summary>
        /// Parent Sample pointed by [SampleGetting].([SampleId]) (FK_SampleGetting_Sample)
        /// </summary>
        [ForeignKey("SampleId")] public virtual Sample Sample { get; set; } // FK_SampleGetting_Sample

        public SampleGetting()
        {
            IsDeleted = false;
        }
    }

    // Sample
    [Table("Sample", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Sample
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"SampleID", Order = 1, TypeName = "int")]
        [Index(@"PK_Sample", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Sample ID")]
        public int SampleId { get; set; } // SampleID (Primary key)

        [Column(@"SampleGroupID", Order = 2, TypeName = "int")]
        [Display(Name = "Sample group ID")]
        public int? SampleGroupId { get; set; } // SampleGroupID

        [Column(@"SampleName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Sample name")]
        public string SampleName { get; set; } // SampleName (length: 20)

        [Column(@"Description", Order = 4, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child LabTests where [LabTest].[SampleID] point to this entity (FK__LabTest__SampleI__03F0984C)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LabTest> LabTests { get; set; } // LabTest.FK__LabTest__SampleI__03F0984C
        /// <summary>
        /// Child SampleGettings where [SampleGetting].[SampleID] point to this entity (FK_SampleGetting_Sample)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SampleGetting> SampleGettings { get; set; } // SampleGetting.FK_SampleGetting_Sample

        // Foreign keys

        /// <summary>
        /// Parent SampleGroup pointed by [Sample].([SampleGroupId]) (FK_Sample_SampleGroup)
        /// </summary>
        [ForeignKey("SampleGroupId")] public virtual SampleGroup SampleGroup { get; set; } // FK_Sample_SampleGroup

        public Sample()
        {
            IsDeleted = false;
            SampleGettings = new System.Collections.Generic.List<SampleGetting>();
            LabTests = new System.Collections.Generic.List<LabTest>();
        }
    }

    // Patient
    [Table("Patient", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Patient
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"PatientID", Order = 1, TypeName = "int")]
        [Index(@"PK__Patient__3214EC2761CA8559", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Patient ID")]
        public int PatientId { get; set; } // PatientID (Primary key)

        [Column(@"PatientCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Patient code")]
        public string PatientCode { get; set; } // PatientCode (length: 20)

        [Column(@"AccountID", Order = 3, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountID

        [Column(@"FullName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Full name")]
        public string FullName { get; set; } // FullName (length: 100)

        [Column(@"Gender", Order = 5, TypeName = "nvarchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Gender")]
        public string Gender { get; set; } // Gender (length: 10)

        [Column(@"DateOfBirth", Order = 6, TypeName = "datetime")]
        [Display(Name = "Date of birth")]
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth

        [Column(@"PhoneNumber", Order = 7, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        [Column(@"HomeAddress", Order = 8, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Home address")]
        public string HomeAddress { get; set; } // HomeAddress (length: 200)

        [Column(@"CompanyAddress", Order = 9, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Company address")]
        public string CompanyAddress { get; set; } // CompanyAddress (length: 200)

        [Column(@"IsDeleted", Order = 10, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Appointments where [Appointment].[PatientID] point to this entity (FK_Appointment_Patient)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Appointment> Appointments { get; set; } // Appointment.FK_Appointment_Patient
        /// <summary>
        /// Child Feedbacks where [Feedback].[PatientID] point to this entity (FK__Feedback__Patien__6B24EA82)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Feedback> Feedbacks { get; set; } // Feedback.FK__Feedback__Patien__6B24EA82

        // Foreign keys

        /// <summary>
        /// Parent Account pointed by [Patient].([AccountId]) (FK_Patient_Account)
        /// </summary>
        [ForeignKey("AccountId")] public virtual Account Account { get; set; } // FK_Patient_Account

        public Patient()
        {
            IsDeleted = false;
            Appointments = new System.Collections.Generic.List<Appointment>();
            Feedbacks = new System.Collections.Generic.List<Feedback>();
        }
    }

    // LabTestingIndex
    [Table("LabTestingIndex", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestingIndex
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LabtTestingIndexID", Order = 1, TypeName = "int")]
        [Index(@"PK__ResultIn__64F89096C59FFD89", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Labt testing index ID")]
        public int LabtTestingIndexId { get; set; } // LabtTestingIndexID (Primary key)

        [Column(@"LabTestingID", Order = 2, TypeName = "int")]
        [Display(Name = "Lab testing ID")]
        public int? LabTestingId { get; set; } // LabTestingID

        [Column(@"IndexName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Index name")]
        public string IndexName { get; set; } // IndexName (length: 20)

        [Column(@"IndexValue", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Index value")]
        public string IndexValue { get; set; } // IndexValue (length: 50)

        [Column(@"LowNormalHigh", Order = 5, TypeName = "nvarchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Low normal high")]
        public string LowNormalHigh { get; set; } // LowNormalHigh (length: 10)

        [Column(@"NormalRange", Order = 6, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Normal range")]
        public string NormalRange { get; set; } // NormalRange (length: 50)

        [Column(@"Unit", Order = 7, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 20)

        [Column(@"IsDeleted", Order = 8, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent LabTesting pointed by [LabTestingIndex].([LabTestingId]) (FK_LabTestingIndex_LabTesting)
        /// </summary>
        [ForeignKey("LabTestingId")] public virtual LabTesting LabTesting { get; set; } // FK_LabTestingIndex_LabTesting

        public LabTestingIndex()
        {
            IsDeleted = false;
        }
    }

    // LabTesting
    [Table("LabTesting", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTesting
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LabTestingID", Order = 1, TypeName = "int")]
        [Index(@"PK_LabTesting", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Lab testing ID")]
        public int LabTestingId { get; set; } // LabTestingID (Primary key)

        [Column(@"LabTestID", Order = 2, TypeName = "int")]
        [Display(Name = "Lab test ID")]
        public int? LabTestId { get; set; } // LabTestID

        [Column(@"AppointmentCode", Order = 3, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Appointment code")]
        public string AppointmentCode { get; set; } // AppointmentCode (length: 20)

        [Column(@"Status", Order = 4, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 20)

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child LabTestingIndexes where [LabTestingIndex].[LabTestingID] point to this entity (FK_LabTestingIndex_LabTesting)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LabTestingIndex> LabTestingIndexes { get; set; } // LabTestingIndex.FK_LabTestingIndex_LabTesting

        // Foreign keys

        /// <summary>
        /// Parent Appointment pointed by [LabTesting].([AppointmentCode]) (FK_LabTesting_Appointment)
        /// </summary>
        [ForeignKey("AppointmentCode")] public virtual Appointment Appointment { get; set; } // FK_LabTesting_Appointment

        /// <summary>
        /// Parent LabTest pointed by [LabTesting].([LabTestId]) (FK_LabTesting_LabTest)
        /// </summary>
        [ForeignKey("LabTestId")] public virtual LabTest LabTest { get; set; } // FK_LabTesting_LabTest

        public LabTesting()
        {
            IsDeleted = false;
            LabTestingIndexes = new System.Collections.Generic.List<LabTestingIndex>();
        }
    }

    // LabTest
    [Table("LabTest", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTest
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"LabTestID", Order = 1, TypeName = "int")]
        [Index(@"PK_TestType", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Lab test ID")]
        public int LabTestId { get; set; } // LabTestID (Primary key)

        [Column(@"LabTestCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Lab test code")]
        public string LabTestCode { get; set; } // LabTestCode (length: 20)

        [Column(@"LabTestName", Order = 3, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Lab test name")]
        public string LabTestName { get; set; } // LabTestName (length: 100)

        [Column(@"Description", Order = 4, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Description")]
        public string Description { get; set; } // Description (length: 500)

        [Column(@"Price", Order = 5, TypeName = "int")]
        [Display(Name = "Price")]
        public int? Price { get; set; } // Price

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        [Column(@"SampleID", Order = 7, TypeName = "int")]
        [Display(Name = "Sample ID")]
        public int? SampleId { get; set; } // SampleID

        // Reverse navigation

        /// <summary>
        /// Child LabTestings where [LabTesting].[LabTestID] point to this entity (FK_LabTesting_LabTest)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LabTesting> LabTestings { get; set; } // LabTesting.FK_LabTesting_LabTest

        // Foreign keys

        /// <summary>
        /// Parent Sample pointed by [LabTest].([SampleId]) (FK__LabTest__SampleI__03F0984C)
        /// </summary>
        [ForeignKey("SampleId")] public virtual Sample Sample { get; set; } // FK__LabTest__SampleI__03F0984C

        public LabTest()
        {
            IsDeleted = false;
            LabTestings = new System.Collections.Generic.List<LabTesting>();
        }
    }

    // ImportPaperDetail
    [Table("ImportPaperDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaperDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ImportPaperDetailId", Order = 1, TypeName = "int")]
        [Index(@"PK_InputPaperDetail", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Import paper detail ID")]
        public int ImportPaperDetailId { get; set; } // ImportPaperDetailId (Primary key)

        [Column(@"ImportPaperId", Order = 2, TypeName = "int")]
        [Display(Name = "Import paper ID")]
        public int? ImportPaperId { get; set; } // ImportPaperId

        [Column(@"SuppliesId", Order = 3, TypeName = "int")]
        [Display(Name = "Supplies ID")]
        public int? SuppliesId { get; set; } // SuppliesId

        [Column(@"Unit", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 50)

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Note", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent ImportPaper pointed by [ImportPaperDetail].([ImportPaperId]) (FK_ImportPaperDetail_ImportPaper)
        /// </summary>
        [ForeignKey("ImportPaperId")] public virtual ImportPaper ImportPaper { get; set; } // FK_ImportPaperDetail_ImportPaper

        /// <summary>
        /// Parent Supply pointed by [ImportPaperDetail].([SuppliesId]) (FK_ImportPaperDetail_Supplies)
        /// </summary>
        [ForeignKey("SuppliesId")] public virtual Supply Supply { get; set; } // FK_ImportPaperDetail_Supplies

        public ImportPaperDetail()
        {
            IsDeleted = false;
        }
    }

    // ImportPaper
    [Table("ImportPaper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ImportPaperId", Order = 1, TypeName = "int")]
        [Index(@"PK_ImportPaper", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Import paper ID")]
        public int ImportPaperId { get; set; } // ImportPaperId (Primary key)

        [Column(@"ImportPaperCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Import paper code")]
        public string ImportPaperCode { get; set; } // ImportPaperCode (length: 20)

        [Column(@"CreateDate", Order = 3, TypeName = "datetime")]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"AccountId", Order = 4, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountId

        [Column(@"Note", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ImportPaperDetails where [ImportPaperDetail].[ImportPaperId] point to this entity (FK_ImportPaperDetail_ImportPaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ImportPaperDetail> ImportPaperDetails { get; set; } // ImportPaperDetail.FK_ImportPaperDetail_ImportPaper

        public ImportPaper()
        {
            IsDeleted = false;
            ImportPaperDetails = new System.Collections.Generic.List<ImportPaperDetail>();
        }
    }

    // HospitalSuggesting
    [Table("HospitalSuggesting", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalSuggesting
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"HospitalSuggestingID", Order = 1, TypeName = "int")]
        [Index(@"PK__Hospital__3214EC2744CC6669", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Hospital suggesting ID")]
        public int HospitalSuggestingId { get; set; } // HospitalSuggestingID (Primary key)

        [Column(@"ResultPaperID", Order = 2, TypeName = "nchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Result paper ID")]
        public string ResultPaperId { get; set; } // ResultPaperID (length: 20)

        [Column(@"HospitalID", Order = 3, TypeName = "int")]
        [Display(Name = "Hospital ID")]
        public int? HospitalId { get; set; } // HospitalID

        [Column(@"FacultyID", Order = 4, TypeName = "int")]
        [Display(Name = "Faculty ID")]
        public int? FacultyId { get; set; } // FacultyID

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Faculty pointed by [HospitalSuggesting].([FacultyId]) (FK__HospitalS__Facul__7F2BE32F)
        /// </summary>
        [ForeignKey("FacultyId")] public virtual Faculty Faculty { get; set; } // FK__HospitalS__Facul__7F2BE32F

        /// <summary>
        /// Parent Hospital pointed by [HospitalSuggesting].([HospitalId]) (FK__HospitalS__Hospi__00200768)
        /// </summary>
        [ForeignKey("HospitalId")] public virtual Hospital Hospital { get; set; } // FK__HospitalS__Hospi__00200768

        public HospitalSuggesting()
        {
            IsDeleted = false;
        }
    }

    // HospitalFacultyMapping
    [Table("HospitalFacultyMapping", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalFacultyMapping
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"HospitalFacultyMappingID", Order = 1, TypeName = "int")]
        [Index(@"PK__Hospital__275680DE8771BC40", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Hospital faculty mapping ID")]
        public int HospitalFacultyMappingId { get; set; } // HospitalFacultyMappingID (Primary key)

        [Column(@"HospitalID", Order = 2, TypeName = "int")]
        [Display(Name = "Hospital ID")]
        public int? HospitalId { get; set; } // HospitalID

        [Column(@"FacultyID", Order = 3, TypeName = "int")]
        [Display(Name = "Faculty ID")]
        public int? FacultyId { get; set; } // FacultyID

        [Column(@"IsDeleted", Order = 4, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Faculty pointed by [HospitalFacultyMapping].([FacultyId]) (FK__HospitalF__Facul__10566F31)
        /// </summary>
        [ForeignKey("FacultyId")] public virtual Faculty Faculty { get; set; } // FK__HospitalF__Facul__10566F31

        /// <summary>
        /// Parent Hospital pointed by [HospitalFacultyMapping].([HospitalId]) (FK__HospitalF__Hospi__114A936A)
        /// </summary>
        [ForeignKey("HospitalId")] public virtual Hospital Hospital { get; set; } // FK__HospitalF__Hospi__114A936A

        public HospitalFacultyMapping()
        {
            IsDeleted = false;
        }
    }

    // Hospital
    [Table("Hospital", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Hospital
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"HospitalID", Order = 1, TypeName = "int")]
        [Index(@"PK__Hospital__38C2E58F74E22A73", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Hospital ID")]
        public int HospitalId { get; set; } // HospitalID (Primary key)

        [Column(@"HospitalName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Hospital name")]
        public string HospitalName { get; set; } // HospitalName (length: 50)

        [Column(@"HospitalAddress", Order = 3, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Hospital address")]
        public string HospitalAddress { get; set; } // HospitalAddress (length: 200)

        [Column(@"Hotline", Order = 4, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Hotline")]
        public string Hotline { get; set; } // Hotline (length: 20)

        [Column(@"IsDeleted", Order = 5, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child HospitalFacultyMappings where [HospitalFacultyMapping].[HospitalID] point to this entity (FK__HospitalF__Hospi__114A936A)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalFacultyMapping> HospitalFacultyMappings { get; set; } // HospitalFacultyMapping.FK__HospitalF__Hospi__114A936A
        /// <summary>
        /// Child HospitalSuggestings where [HospitalSuggesting].[HospitalID] point to this entity (FK__HospitalS__Hospi__00200768)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalSuggesting> HospitalSuggestings { get; set; } // HospitalSuggesting.FK__HospitalS__Hospi__00200768

        public Hospital()
        {
            IsDeleted = false;
            HospitalFacultyMappings = new System.Collections.Generic.List<HospitalFacultyMapping>();
            HospitalSuggestings = new System.Collections.Generic.List<HospitalSuggesting>();
        }
    }

    // Feedback
    [Table("Feedback", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Feedback
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FeedbackID", Order = 1, TypeName = "int")]
        [Index(@"PK__Feedback__6A4BEDF66D5C3999", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Feedback ID")]
        public int FeedbackId { get; set; } // FeedbackID (Primary key)

        [Column(@"PatientID", Order = 2, TypeName = "int")]
        [Display(Name = "Patient ID")]
        public int? PatientId { get; set; } // PatientID

        [Column(@"EmployeeID", Order = 3, TypeName = "int")]
        [Display(Name = "Employee ID")]
        public int? EmployeeId { get; set; } // EmployeeID

        [Column(@"Content", Order = 4, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Content")]
        public string Content { get; set; } // Content (length: 500)

        [Column(@"ReceivedDateTime", Order = 5, TypeName = "datetime")]
        [Display(Name = "Received date time")]
        public System.DateTime? ReceivedDateTime { get; set; } // ReceivedDateTime

        [Column(@"IsDeleted", Order = 6, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Feedback].([EmployeeId]) (FK__Feedback__Employ__0E6E26BF)
        /// </summary>
        [ForeignKey("EmployeeId")] public virtual Employee Employee { get; set; } // FK__Feedback__Employ__0E6E26BF

        /// <summary>
        /// Parent Patient pointed by [Feedback].([PatientId]) (FK__Feedback__Patien__6B24EA82)
        /// </summary>
        [ForeignKey("PatientId")] public virtual Patient Patient { get; set; } // FK__Feedback__Patien__6B24EA82

        public Feedback()
        {
            IsDeleted = false;
        }
    }

    // Faculty
    [Table("Faculty", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Faculty
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"FacultyID", Order = 1, TypeName = "int")]
        [Index(@"PK__Faculty__306F636E346C2475", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Faculty ID")]
        public int FacultyId { get; set; } // FacultyID (Primary key)

        [Column(@"FacultyName", Order = 2, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Faculty name")]
        public string FacultyName { get; set; } // FacultyName (length: 200)

        [Column(@"IsDeleted", Order = 3, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child HospitalFacultyMappings where [HospitalFacultyMapping].[FacultyID] point to this entity (FK__HospitalF__Facul__10566F31)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalFacultyMapping> HospitalFacultyMappings { get; set; } // HospitalFacultyMapping.FK__HospitalF__Facul__10566F31
        /// <summary>
        /// Child HospitalSuggestings where [HospitalSuggesting].[FacultyID] point to this entity (FK__HospitalS__Facul__7F2BE32F)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<HospitalSuggesting> HospitalSuggestings { get; set; } // HospitalSuggesting.FK__HospitalS__Facul__7F2BE32F

        public Faculty()
        {
            IsDeleted = false;
            HospitalFacultyMappings = new System.Collections.Generic.List<HospitalFacultyMapping>();
            HospitalSuggestings = new System.Collections.Generic.List<HospitalSuggesting>();
        }
    }

    // ExportPaperDetail
    [Table("ExportPaperDetail", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportPaperDetail
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExportPaperDetailId", Order = 1, TypeName = "int")]
        [Index(@"PK_ExportProposurePaperDetail", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Export paper detail ID")]
        public int ExportPaperDetailId { get; set; } // ExportPaperDetailId (Primary key)

        [Column(@"ExportPaperId", Order = 2, TypeName = "int")]
        [Display(Name = "Export paper ID")]
        public int? ExportPaperId { get; set; } // ExportPaperId

        [Column(@"SuppliesId", Order = 3, TypeName = "int")]
        [Display(Name = "Supplies ID")]
        public int? SuppliesId { get; set; } // SuppliesId

        [Column(@"Unit", Order = 4, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Unit")]
        public string Unit { get; set; } // Unit (length: 50)

        [Column(@"Quantity", Order = 5, TypeName = "int")]
        [Display(Name = "Quantity")]
        public int? Quantity { get; set; } // Quantity

        [Column(@"Note", Order = 6, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Foreign keys

        /// <summary>
        /// Parent ExportPaper pointed by [ExportPaperDetail].([ExportPaperId]) (FK_ExportProposurePaperDetail_ExportProposurePaper)
        /// </summary>
        [ForeignKey("ExportPaperId")] public virtual ExportPaper ExportPaper { get; set; } // FK_ExportProposurePaperDetail_ExportProposurePaper

        /// <summary>
        /// Parent Supply pointed by [ExportPaperDetail].([SuppliesId]) (FK_ExportProposurePaperDetail_Supplies)
        /// </summary>
        [ForeignKey("SuppliesId")] public virtual Supply Supply { get; set; } // FK_ExportProposurePaperDetail_Supplies

        public ExportPaperDetail()
        {
            IsDeleted = false;
        }
    }

    // ExportPaper
    [Table("ExportPaper", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportPaper
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ExportPaperId", Order = 1, TypeName = "int")]
        [Index(@"PK_ExportProposurePaper", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Export paper ID")]
        public int ExportPaperId { get; set; } // ExportPaperId (Primary key)

        [Column(@"ExportPaperCode", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Export paper code")]
        public string ExportPaperCode { get; set; } // ExportPaperCode (length: 20)

        [Column(@"CreateDate", Order = 3, TypeName = "datetime")]
        [Display(Name = "Create date")]
        public System.DateTime? CreateDate { get; set; } // CreateDate

        [Column(@"AccountId", Order = 4, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountId

        [Column(@"Note", Order = 5, TypeName = "nvarchar(max)")]
        [Display(Name = "Note")]
        public string Note { get; set; } // Note

        [Column(@"Status", Order = 6, TypeName = "bit")]
        [Display(Name = "Status")]
        public bool? Status { get; set; } // Status

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child ExportPaperDetails where [ExportPaperDetail].[ExportPaperId] point to this entity (FK_ExportProposurePaperDetail_ExportProposurePaper)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ExportPaperDetail> ExportPaperDetails { get; set; } // ExportPaperDetail.FK_ExportProposurePaperDetail_ExportProposurePaper

        public ExportPaper()
        {
            IsDeleted = false;
            ExportPaperDetails = new System.Collections.Generic.List<ExportPaperDetail>();
        }
    }

    // Employee
    [Table("Employee", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Employee
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"EmployeeID", Order = 1, TypeName = "int")]
        [Index(@"PK__Employee__7AD04FF191E79CA7", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Employee ID")]
        public int EmployeeId { get; set; } // EmployeeID (Primary key)

        [Column(@"AccountID", Order = 2, TypeName = "int")]
        [Display(Name = "Account ID")]
        public int? AccountId { get; set; } // AccountID

        [Column(@"Status", Order = 3, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 20)

        [Column(@"FullName", Order = 4, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Full name")]
        public string FullName { get; set; } // FullName (length: 100)

        [Column(@"Gender", Order = 5, TypeName = "nvarchar")]
        [MaxLength(10)]
        [StringLength(10)]
        [Display(Name = "Gender")]
        public string Gender { get; set; } // Gender (length: 10)

        [Column(@"DateOfBirth", Order = 6, TypeName = "date")]
        [Display(Name = "Date of birth")]
        public System.DateTime? DateOfBirth { get; set; } // DateOfBirth

        [Column(@"HomeAddress", Order = 7, TypeName = "nvarchar")]
        [MaxLength(200)]
        [StringLength(200)]
        [Display(Name = "Home address")]
        public string HomeAddress { get; set; } // HomeAddress (length: 200)

        [Column(@"StartDate", Order = 8, TypeName = "date")]
        [Display(Name = "Start date")]
        public System.DateTime? StartDate { get; set; } // StartDate

        [Column(@"PhoneNumber", Order = 9, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        [Column(@"IsDeleted", Order = 10, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Appointments where [Appointment].[DoctorID] point to this entity (FK_Appointment_Employee)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Appointment> Appointments { get; set; } // Appointment.FK_Appointment_Employee
        /// <summary>
        /// Child Feedbacks where [Feedback].[EmployeeID] point to this entity (FK__Feedback__Employ__0E6E26BF)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Feedback> Feedbacks { get; set; } // Feedback.FK__Feedback__Employ__0E6E26BF

        // Foreign keys

        /// <summary>
        /// Parent Account pointed by [Employee].([AccountId]) (FK__Employee__Accoun__68487DD7)
        /// </summary>
        [ForeignKey("AccountId")] public virtual Account Account { get; set; } // FK__Employee__Accoun__68487DD7

        public Employee()
        {
            IsDeleted = false;
            Feedbacks = new System.Collections.Generic.List<Feedback>();
            Appointments = new System.Collections.Generic.List<Appointment>();
        }
    }

    // Appointment
    [Table("Appointment", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Appointment
    {
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column(@"AppointmentCode", Order = 1, TypeName = "nvarchar")]
        [Index(@"PK_Appointment", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [MaxLength(20)]
        [StringLength(20)]
        [Key]
        [Display(Name = "Appointment code")]
        public string AppointmentCode { get; set; } // AppointmentCode (Primary key) (length: 20)

        [Column(@"PatientID", Order = 2, TypeName = "int")]
        [Display(Name = "Patient ID")]
        public int? PatientId { get; set; } // PatientID

        [Column(@"DoctorID", Order = 3, TypeName = "int")]
        [Display(Name = "Doctor ID")]
        public int? DoctorId { get; set; } // DoctorID

        [Column(@"IsEmergency", Order = 4, TypeName = "bit")]
        [Display(Name = "Is emergency")]
        public bool? IsEmergency { get; set; } // IsEmergency

        [Column(@"TestPurpose", Order = 5, TypeName = "nvarchar")]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Test purpose")]
        public string TestPurpose { get; set; } // TestPurpose (length: 100)

        [Column(@"EnterTime", Order = 6, TypeName = "datetime")]
        [Display(Name = "Enter time")]
        public System.DateTime? EnterTime { get; set; } // EnterTime

        [Column(@"ReturnTime", Order = 7, TypeName = "datetime")]
        [Display(Name = "Return time")]
        public System.DateTime? ReturnTime { get; set; } // ReturnTime

        [Column(@"Conclusion", Order = 8, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Conclusion")]
        public string Conclusion { get; set; } // Conclusion (length: 500)

        [Column(@"ResultApproved", Order = 9, TypeName = "bit")]
        [Display(Name = "Result approved")]
        public bool? ResultApproved { get; set; } // ResultApproved

        [Column(@"Status", Order = 10, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Status")]
        public string Status { get; set; } // Status (length: 20)

        [Column(@"IsDeleted", Order = 11, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child LabTestings where [LabTesting].[AppointmentCode] point to this entity (FK_LabTesting_Appointment)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<LabTesting> LabTestings { get; set; } // LabTesting.FK_LabTesting_Appointment
        /// <summary>
        /// Child SampleGettings where [SampleGetting].[AppointmentCode] point to this entity (FK_SampleGetting_Appointment)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SampleGetting> SampleGettings { get; set; } // SampleGetting.FK_SampleGetting_Appointment

        // Foreign keys

        /// <summary>
        /// Parent Employee pointed by [Appointment].([DoctorId]) (FK_Appointment_Employee)
        /// </summary>
        [ForeignKey("DoctorId")] public virtual Employee Employee { get; set; } // FK_Appointment_Employee

        /// <summary>
        /// Parent Patient pointed by [Appointment].([PatientId]) (FK_Appointment_Patient)
        /// </summary>
        [ForeignKey("PatientId")] public virtual Patient Patient { get; set; } // FK_Appointment_Patient

        public Appointment()
        {
            IsDeleted = false;
            SampleGettings = new System.Collections.Generic.List<SampleGetting>();
            LabTestings = new System.Collections.Generic.List<LabTesting>();
        }
    }

    // Account
    [Table("Account", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class Account
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"AccountID", Order = 1, TypeName = "int")]
        [Index(@"PK__Account__3214EC27626EEC4A", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Account ID")]
        public int AccountId { get; set; } // AccountID (Primary key)

        [Column(@"Role", Order = 2, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Display(Name = "Role")]
        public string Role { get; set; } // Role (length: 20)

        [Column(@"Email", Order = 3, TypeName = "nvarchar")]
        [MaxLength(255)]
        [StringLength(255)]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; } // Email (length: 255)

        [Column(@"Password", Order = 4, TypeName = "nvarchar")]
        [MaxLength(128)]
        [StringLength(128)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; } // Password (length: 128)

        [Column(@"PhoneNumber", Order = 5, TypeName = "nvarchar")]
        [MaxLength(20)]
        [StringLength(20)]
        [Phone]
        [Display(Name = "Phone number")]
        public string PhoneNumber { get; set; } // PhoneNumber (length: 20)

        [Column(@"AvatarURL", Order = 6, TypeName = "nvarchar")]
        [MaxLength(500)]
        [StringLength(500)]
        [Display(Name = "Avatar url")]
        public string AvatarUrl { get; set; } // AvatarURL (length: 500)

        [Column(@"IsDeleted", Order = 7, TypeName = "bit")]
        [Display(Name = "Is deleted")]
        public bool? IsDeleted { get; set; } // IsDeleted

        // Reverse navigation

        /// <summary>
        /// Child Employees where [Employee].[AccountID] point to this entity (FK__Employee__Accoun__68487DD7)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Employee> Employees { get; set; } // Employee.FK__Employee__Accoun__68487DD7
        /// <summary>
        /// Child Patients where [Patient].[AccountID] point to this entity (FK_Patient_Account)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Patient> Patients { get; set; } // Patient.FK_Patient_Account

        public Account()
        {
            IsDeleted = false;
            Patients = new System.Collections.Generic.List<Patient>();
            Employees = new System.Collections.Generic.List<Employee>();
        }
    }

    #endregion

    #region POCO Configuration

    // Account
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AccountConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Account>
    {
        public AccountConfiguration()
            : this("dbo")
        {
        }

        public AccountConfiguration(string schema)
        {
            Property(x => x.Role).IsOptional();
            Property(x => x.Email).IsOptional();
            Property(x => x.Password).IsOptional();
            Property(x => x.PhoneNumber).IsOptional();
            Property(x => x.AvatarUrl).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // Appointment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class AppointmentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Appointment>
    {
        public AppointmentConfiguration()
            : this("dbo")
        {
        }

        public AppointmentConfiguration(string schema)
        {
            Property(x => x.PatientId).IsOptional();
            Property(x => x.DoctorId).IsOptional();
            Property(x => x.IsEmergency).IsOptional();
            Property(x => x.TestPurpose).IsOptional();
            Property(x => x.EnterTime).IsOptional();
            Property(x => x.ReturnTime).IsOptional();
            Property(x => x.Conclusion).IsOptional();
            Property(x => x.ResultApproved).IsOptional();
            Property(x => x.Status).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Employee
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class EmployeeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Employee>
    {
        public EmployeeConfiguration()
            : this("dbo")
        {
        }

        public EmployeeConfiguration(string schema)
        {
            Property(x => x.AccountId).IsOptional();
            Property(x => x.Status).IsOptional();
            Property(x => x.FullName).IsOptional();
            Property(x => x.Gender).IsOptional();
            Property(x => x.DateOfBirth).IsOptional();
            Property(x => x.HomeAddress).IsOptional();
            Property(x => x.StartDate).IsOptional();
            Property(x => x.PhoneNumber).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ExportPaper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportPaperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExportPaper>
    {
        public ExportPaperConfiguration()
            : this("dbo")
        {
        }

        public ExportPaperConfiguration(string schema)
        {
            Property(x => x.ExportPaperCode).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.Status).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // ExportPaperDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ExportPaperDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ExportPaperDetail>
    {
        public ExportPaperDetailConfiguration()
            : this("dbo")
        {
        }

        public ExportPaperDetailConfiguration(string schema)
        {
            Property(x => x.ExportPaperId).IsOptional();
            Property(x => x.SuppliesId).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.Quantity).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Faculty
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class FacultyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Faculty>
    {
        public FacultyConfiguration()
            : this("dbo")
        {
        }

        public FacultyConfiguration(string schema)
        {
            Property(x => x.FacultyName).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // Feedback
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class FeedbackConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Feedback>
    {
        public FeedbackConfiguration()
            : this("dbo")
        {
        }

        public FeedbackConfiguration(string schema)
        {
            Property(x => x.PatientId).IsOptional();
            Property(x => x.EmployeeId).IsOptional();
            Property(x => x.Content).IsOptional();
            Property(x => x.ReceivedDateTime).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Hospital
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Hospital>
    {
        public HospitalConfiguration()
            : this("dbo")
        {
        }

        public HospitalConfiguration(string schema)
        {
            Property(x => x.HospitalName).IsOptional();
            Property(x => x.HospitalAddress).IsOptional();
            Property(x => x.Hotline).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // HospitalFacultyMapping
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalFacultyMappingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HospitalFacultyMapping>
    {
        public HospitalFacultyMappingConfiguration()
            : this("dbo")
        {
        }

        public HospitalFacultyMappingConfiguration(string schema)
        {
            Property(x => x.HospitalId).IsOptional();
            Property(x => x.FacultyId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // HospitalSuggesting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class HospitalSuggestingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<HospitalSuggesting>
    {
        public HospitalSuggestingConfiguration()
            : this("dbo")
        {
        }

        public HospitalSuggestingConfiguration(string schema)
        {
            Property(x => x.ResultPaperId).IsOptional().IsFixedLength();
            Property(x => x.HospitalId).IsOptional();
            Property(x => x.FacultyId).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // ImportPaper
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaperConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImportPaper>
    {
        public ImportPaperConfiguration()
            : this("dbo")
        {
        }

        public ImportPaperConfiguration(string schema)
        {
            Property(x => x.ImportPaperCode).IsOptional();
            Property(x => x.CreateDate).IsOptional();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // ImportPaperDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class ImportPaperDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ImportPaperDetail>
    {
        public ImportPaperDetailConfiguration()
            : this("dbo")
        {
        }

        public ImportPaperDetailConfiguration(string schema)
        {
            Property(x => x.ImportPaperId).IsOptional();
            Property(x => x.SuppliesId).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.Quantity).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // LabTest
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LabTest>
    {
        public LabTestConfiguration()
            : this("dbo")
        {
        }

        public LabTestConfiguration(string schema)
        {
            Property(x => x.LabTestCode).IsOptional();
            Property(x => x.LabTestName).IsOptional();
            Property(x => x.Description).IsOptional();
            Property(x => x.Price).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
            Property(x => x.SampleId).IsOptional();

        }
    }

    // LabTesting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LabTesting>
    {
        public LabTestingConfiguration()
            : this("dbo")
        {
        }

        public LabTestingConfiguration(string schema)
        {
            Property(x => x.LabTestId).IsOptional();
            Property(x => x.AppointmentCode).IsOptional();
            Property(x => x.Status).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // LabTestingIndex
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class LabTestingIndexConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LabTestingIndex>
    {
        public LabTestingIndexConfiguration()
            : this("dbo")
        {
        }

        public LabTestingIndexConfiguration(string schema)
        {
            Property(x => x.LabTestingId).IsOptional();
            Property(x => x.IndexName).IsOptional();
            Property(x => x.IndexValue).IsOptional();
            Property(x => x.LowNormalHigh).IsOptional();
            Property(x => x.NormalRange).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Patient
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class PatientConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Patient>
    {
        public PatientConfiguration()
            : this("dbo")
        {
        }

        public PatientConfiguration(string schema)
        {
            Property(x => x.PatientCode).IsOptional();
            Property(x => x.AccountId).IsOptional();
            Property(x => x.FullName).IsOptional();
            Property(x => x.Gender).IsOptional();
            Property(x => x.DateOfBirth).IsOptional();
            Property(x => x.PhoneNumber).IsOptional();
            Property(x => x.HomeAddress).IsOptional();
            Property(x => x.CompanyAddress).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // Sample
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SampleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Sample>
    {
        public SampleConfiguration()
            : this("dbo")
        {
        }

        public SampleConfiguration(string schema)
        {
            Property(x => x.SampleGroupId).IsOptional();
            Property(x => x.SampleName).IsOptional();
            Property(x => x.Description).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // SampleGetting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SampleGettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SampleGetting>
    {
        public SampleGettingConfiguration()
            : this("dbo")
        {
        }

        public SampleGettingConfiguration(string schema)
        {
            Property(x => x.AppointmentCode).IsOptional();
            Property(x => x.SampleId).IsOptional();
            Property(x => x.StartTime).IsOptional();
            Property(x => x.FinishTime).IsOptional();
            Property(x => x.Status).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
            Property(x => x.GettingDate).IsOptional();

        }
    }

    // SampleGroup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SampleGroupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SampleGroup>
    {
        public SampleGroupConfiguration()
            : this("dbo")
        {
        }

        public SampleGroupConfiguration(string schema)
        {
            Property(x => x.GroupName).IsOptional();
            Property(x => x.GettingDuration).IsOptional();
            Property(x => x.OpenTime).IsOptional();
            Property(x => x.CloseTime).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // Supply
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Supply>
    {
        public SupplyConfiguration()
            : this("dbo")
        {
        }

        public SupplyConfiguration(string schema)
        {
            Property(x => x.SuppliesCode).IsOptional();
            Property(x => x.SuppliesName).IsOptional();
            Property(x => x.SuppliesTypeId).IsOptional();
            Property(x => x.Quantity).IsOptional();
            Property(x => x.Unit).IsOptional();
            Property(x => x.Note).IsOptional();
            Property(x => x.IsDeleted).IsOptional();

        }
    }

    // SupplyType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SupplyTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SupplyType>
    {
        public SupplyTypeConfiguration()
            : this("dbo")
        {
        }

        public SupplyTypeConfiguration(string schema)
        {
            Property(x => x.SuppliesTypeName).IsOptional();
            Property(x => x.IsDeleted).IsOptional();
        }
    }

    // database_firewall_rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class sys_DatabaseFirewallRuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<database_firewall_rules>
    {
        public sys_DatabaseFirewallRuleConfiguration()
            : this("sys")
        {
        }

        public sys_DatabaseFirewallRuleConfiguration(string schema)
        {
            Property(x => x.StartIpAddress).IsUnicode(false);
            Property(x => x.EndIpAddress).IsUnicode(false);
        }
    }

    #endregion

    #region Stored procedure return models

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SpHelpdiagramdefinitionReturnModel
    {
        public System.Int32? version { get; set; }
        public System.Byte[] definition { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.36.1.0")]
    public class SpHelpdiagramsReturnModel
    {
        public System.String Database { get; set; }
        public System.String Name { get; set; }
        public System.Int32 ID { get; set; }
        public System.String Owner { get; set; }
        public System.Int32 OwnerID { get; set; }
    }

    #endregion

}
// </auto-generated>

